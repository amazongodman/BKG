nest_iris_models$models
nest_iris_models$models[1]
nest_iris_models$models[[1]]
gss %>%
specify(response = age)
library(tidyverse)
library(tidymodels)
gss %>%
specify(response = age)
gss
gss %>%
specify(age ~ partyid)
vignette("infer")
gss %>%
specify(response = age, explanatory = partyid)
gss %>%
specify(college ~ partyid, success = "degree") %>%
hypothesize(null = "independence")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 200, type = "bootstrap")
gss %>%
specify(partyid ~ age) %>%
hypothesize(null = "independence") %>%
generate(reps = 200, type = "permute")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 200, type = "bootstrap") %>%
calculate(stat = "mean")
F_hat <- gss %>%
specify(age ~ partyid) %>%
calculate(stat = "F")
F_hat <- gss %>%
specify(age ~ partyid) %>%
calculate(stat = "F")
gss %>%
specify(age ~ partyid) %>%
calculate(stat = "F")
null_distn <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
null_distn <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
null_distn <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
help(package = "infer")
vignette("infer")
gss %>%
tidyr::drop_na(college) %>%
t_test(formula = hours ~ college,
order = c("degree", "no degree"),
alternative = "two-sided")
null_distn %>%
get_p_value(obs_stat = F_hat, direction = "greater")
visualize(null_distn) +
shade_p_value(obs_stat = F_hat, direction = "greater")
# find the point estimate
point_estimate <- gss %>%
specify(response = hours) %>%
calculate(stat = "mean")
# generate a null distribution
null_dist <- gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_dist %>%
visualize()
null_dist %>%
visualize() +
shade_p_value(obs_stat = point_estimate, direction = "two-sided")
p_value <- null_dist %>%
get_p_value(obs_stat = point_estimate, direction = "two-sided")
p_value
# start with the null distribution
null_dist %>%
# calculate the confidence interval around the point estimate
get_confidence_interval(point_estimate = point_estimate,
# at the 95% confidence level
level = .95,
# using the standard error
type = "se")
null_f_distn <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
null_f_distn_theoretical <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
calculate(stat = "F")
F_hat <- gss %>%
specify(age ~ partyid) %>%
calculate(stat = "F")
visualize(null_f_distn_theoretical, method = "theoretical") +
shade_p_value(obs_stat = F_hat, direction = "greater")
visualize(null_f_distn, method = "both") +
shade_p_value(obs_stat = F_hat, direction = "greater")
library(tidymodels) # Includes the infer package
data(ad_data, package = "modeldata")
cross_table<- ad_data %>%
select(Genotype, Class)
library(tidymodels) # Includes the infer package
data(ad_data, package = "modeldata")
cross_table<- ad_data %>%
select(Genotype, Class)
table(cross_table)
ct<-as.data.frame(table(cross_table))
ct %>%
ggplot()+
aes(x=Freq, y=Genotype, fill=Class)+
geom_bar(stat = "identity", position = "fill")
observed_indep_statistic <- ad_data %>%
specify(Genotype ~ Class) %>%
calculate(stat = "Chisq")
null_distribution_simulated <- ad_data %>%
specify(Genotype ~ Class) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "Chisq")
null_distribution_simulated %>%
visualize() +
shade_p_value(observed_indep_statistic,
direction = "greater")
null_distribution_theoretical <- ad_data %>%
specify(Genotype ~ Class) %>%
hypothesize(null = "independence") %>%
# note that we skip the generation step here!
calculate(stat = "Chisq")
ad_data %>%
specify(Genotype ~ Class) %>%
hypothesize(null = "independence") %>%
visualize(method = "theoretical") +
shade_p_value(observed_indep_statistic,
direction = "greater")
null_distribution_simulated %>%
visualize(method = "both") +
shade_p_value(observed_indep_statistic,
direction = "greater")
p_value_independence <- null_distribution_simulated %>%
get_p_value(obs_stat = observed_indep_statistic,
direction = "greater")
chisq_test(ad_data, Genotype ~ Class)
meta_rates <- c("E2E2" = 0.71, "E2E3" = 11.4, "E2E4" = 2.32,
"E3E3" = 61.0, "E3E4" = 22.6, "E4E4" = 2.22)
meta_rates <- meta_rates/sum(meta_rates) # these add up to slightly > 100%
obs_rates <- table(ad_data$Genotype)/nrow(ad_data)
round(cbind(obs_rates, meta_rates) * 100, 2)
null_distribution_gof <- ad_data %>%
specify(response = Genotype) %>%
hypothesize(null = "point", p = meta_rates) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "Chisq")
null_distribution_gof %>%
visualize() +
shade_p_value(observed_gof_statistic,
direction = "greater")
observed_gof_statistic <- ad_data %>%
specify(response = Genotype) %>%
hypothesize(null = "point", p = meta_rates) %>%
calculate(stat = "Chisq")
null_distribution_gof <- ad_data %>%
specify(response = Genotype) %>%
hypothesize(null = "point", p = meta_rates) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "Chisq")
null_distribution_gof %>%
visualize() +
shade_p_value(observed_gof_statistic ,
direction = "greater")
p_value_gof <- null_distribution_gof %>%
get_p_value(observed_gof_statistic,
direction = "greater")
p_value_gof
chisq_test(ad_data, response = Genotype, p = meta_rates)
0.5/sqrt(1.5^2)/sqrt(16)
0.5/sqrt((1.5^2)/16)
sqrt(1.5^2)
sqrt(1.5^2)/sqrt(16)
sqrt((1.5^2)/16)
0.5/sqrt(1.5^2)/sqrt(16)
0.5/sqrt((1.5^2)/16)
0.5/(sqrt(1.5^2)/sqrt(16))
0.5/sqrt((1.5^2)/16)
setwd("C:\\Users\\ringa\\Desktop\\BKG")
library(tidyverse)
train <- read_csv("booking_train_set.csv")
test <- read_csv("booking_test_set.csv")
glimpse(train)
library(skimr)
skim(train)
setwd("C:\\Users\\ringa\\Desktop\\BKG")
library(tidyverse)
library(skimr)
train <- read_csv("booking_train_set.csv")
test <- read_csv("booking_test_set.csv")
glimpse(train)
skim(train)
unique(train$user_id)
train %>% group_by(user_id) %>% summarise(coun=n())
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(coun)
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
library(lubridate)
train %>%
mutate(stay_days = ymd(checkout) - ymd(checkin))
train <- train %>%
mutate(stay_days = ymd(checkout) - ymd(checkin))
test <- test %>%
mutate(stay_days = ymd(checkout) - ymd(checkin))
train %>% count(booker_country)
train %>% count(booker_country) %>% arrange(desc(n))
geom_bar(stat = 'count)
train %>% ggplot(x=booker_country) +
geom_bar(stat = 'count)
train %>% ggplot(x=booker_country) +
geom_bar(stat = 'count')
train %>%
ggplot(aes(x=booker_country)) +
geom_bar(stat = 'count') +
stat_count(geom = "text", vjust = 2, colour = "white")
train %>%
ggplot(aes(x=booker_country)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country)) %>%
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
group_by(joint)%>%
summarise(coun = n())
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
group_by(joint)%>%
summarise(coun = n())%>%
arrange(desc(coun))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
ggplot(aes(x=joint)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")
top20 <- train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
group_by(joint)%>%
summarise(coun = n())%>%
arrange(desc(coun))%>%
head(20)
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
filter(joint %in% unique(top20$joint))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
filter(joint %in% unique(top20$joint))%>%
ggplot(aes(x=joint)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
filter(joint %in% unique(top20$joint))%>%
ggplot(aes(x=joint)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
filter(joint %in% unique(top20$joint))%>%
ggplot(aes(x=joint,fill=booker_country)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
filter(joint %in% unique(top20$joint))%>%
ggplot(aes(x=joint,fill=hotel_country)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
head(20) %>%
ggplot(aes(x=joint)) +
geom_bar(stat = 'count') +
stat_count(aes(label = ..count..), geom = "text", vjust = 2, colour = "white")
top20 <- train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
group_by(joint)%>%
summarise(coun = n())%>%
arrange(desc(coun))%>%
head(20)
top20 <- train %>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
group_by(joint)%>%
summarise(coun = n())%>%
ungroup()%>%
arrange(desc(coun))%>%
head(20)
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train%>% names()
train %>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train %>%
group_by(user_id,city_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train %>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(desc(coun,user_id))
train <- read_csv("booking_train_set.csv")
test <- read_csv("booking_test_set.csv")
train <- train %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))
test <- test %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))
train %>%
group_by(user_id,city_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train %>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(desc(coun,user_id))
train %>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(desc(user_id,coun))
train %>%
group_by(user_id,city_id) %>%
summarise(coun=n()) %>%
arrange(desc(user_id,coun))
train <- read_csv("booking_train_set.csv")
test <- read_csv("booking_test_set.csv")
train <- train %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
mutate(checkin_month = month(checkin))
test <- test %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
mutate(checkin_month = month(checkin))
train %>% names()
train %>% count(hotel_country)
train %>% count(city_id)
train %>% count(booker_country) %>% arrange(desc(n))
train %>% count(hotel_country)  %>% arrange(desc(n))
train %>% count(city_id)  %>% arrange(desc(n))
train %>% count(device_class)  %>% arrange(desc(n))
train %>% count(affiliate_id)  %>% arrange(desc(n))
train %>% count(utrip_id)  %>% arrange(desc(n))
train <- read_csv("booking_train_set.csv")
test <- read_csv("booking_test_set.csv")
train <- train %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id),
affiliate_id = as.character(affiliate_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
mutate(checkin_month = month(checkin))
test <- test %>% mutate(user_id = as.character(user_id),
city_id = as.character(city_id),
affiliate_id = as.character(affiliate_id))%>%
mutate(stay_days = ymd(checkout) - ymd(checkin))%>%
mutate(joint = str_c(booker_country,'-',hotel_country))%>%
mutate(checkin_month = month(checkin))
train %>% count(stay_days)  %>% arrange(desc(n))
train %>% count(checkin_month)  %>% arrange(desc(n))
train %>% names()
train %>% group_by(utrip_id,user_id) %>% summarise(count=n())
train %>% group_by(utrip_id,user_id) %>% summarise(count=n()) %>% arrange(desc(count))
train %>% group_by(utrip_id,hotel_country) %>% summarise(count=n()) %>% arrange(desc(count))
train %>% group_by(utrip_id,hotel_country) %>% summarise(count=n()) %>% arrange(desc(utrip_id,count))
train %>% group_by(utrip_id,hotel_country,city_id) %>% summarise(count=n()) %>% arrange(desc(count))
nstall.packages("rworldmap")
install.packages("rworldmap")
train %>% names()
mapCountryData(sVisit, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
library(rworldmap)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n))
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
mapCountryData(sVisit, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
library(rworldmap)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n))
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
map_data
library(rworldmap)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n))
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
png("world.png", width=960, height=540)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n))
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
train %>% count(booker_country) %>% arrange(desc(n))
train %>% count(booker_country) %>% arrange(desc(n)) %>% mutate(su=sum(n)) %>% mutate(rati = n/su)
png("world.png", width=960, height=540)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n)) %>% mutate(su=sum(n)) %>% mutate(rati = n/su)
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
for_mapping
#png("world.png", width=960, height=540)
for_mapping<- train %>% count(booker_country) %>% arrange(desc(n)) %>% mutate(su=sum(n)) %>% mutate(rati = n/su)
map_data <- joinCountryData2Map(for_mapping, joinCode="NAME", nameJoinColumn="booker_country")
#mapCountryData(map_data, nameColumnToPlot="n", catMethod="fixedWidth", mapTitle = "how many bookers live in ?", addLegend = TRUE)
data("countryExData",envir=environment(),package="rworldmap")
countryExData
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun))
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun)) %>%
mutate(cm = cumsum(coun))
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun)) %>%
mutate(cm = cumsum(coun),
rn = row_number())
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun)) %>%
mutate(cm = cumsum(coun),
rn = row_number()) %>%
ggplot(aes(x=rn,y=cm)) +
geom_point()
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun)) %>%
mutate(rati = coun / sum(coun),
cm = cumsum(rati),
rn = row_number()
) %>%
ggplot(aes(x=rn,y=cm)) +
geom_point()
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
arrange(desc(coun)) %>%
mutate(rati = coun / sum(coun),
cm = cumsum(rati),
rn = row_number()
)
arrange(desc(coun))
train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
filter(coun > 100) %>%
arrange(desc(coun))
trip_lover_10 <- train %>%
group_by(user_id) %>%
summarise(coun=n()) %>%
filter(coun > 60) %>%
arrange(desc(coun))
trip_lover_10
train %>% filter(user_id %in% unique(trip_lover_10$user_id))
train %>% filter(user_id %in% unique(trip_lover_10$user_id))%>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(desc(user_id,coun))
train %>% filter(user_id %in% unique(trip_lover_10$user_id))%>%
group_by(user_id,hotel_country) %>%
summarise(coun=n()) %>%
arrange(user_id,desc(coun))
train %>% filter(user_id %in% unique(trip_lover_10$user_id)) %>%
group_by(user_id,city_id) %>%
summarise(coun=n()) %>%
arrange(user_id,desc(coun))
train %>% count(user_id,utrip_id)
train %>% count(user_id,utrip_id) %>% arrange(desc(n))
train %>% filter(user_id == "3635431")
train %>% filter(user_id == "3635431") %>% group_by(utrip_id,city) %>% summarise(coun = n())
train %>% filter(user_id == "3635431") %>% group_by(utrip_id,city_id) %>% summarise(coun = n())
skim(test)
install.packages("catboost")
library(catboost)
